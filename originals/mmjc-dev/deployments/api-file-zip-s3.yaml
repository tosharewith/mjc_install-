apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"api-file-zip-s3","app.kubernetes.io/managed-by":"kustomize","app.kubernetes.io/name":"api-file-zip-s3","app.kubernetes.io/part-of":"mcp-platform","app.kubernetes.io/version":"dev","component":"api-server","environment":"mmjc-dev","version":"v1"},"name":"api-file-zip-s3","namespace":"mmjc-dev"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"api-file-zip-s3","app.kubernetes.io/managed-by":"kustomize","app.kubernetes.io/name":"api-file-zip-s3","app.kubernetes.io/part-of":"mcp-platform","app.kubernetes.io/version":"dev","environment":"mmjc-dev"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":0},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"prometheus.io/path":"/health","prometheus.io/port":"8080","prometheus.io/scrape":"true"},"labels":{"app":"api-file-zip-s3","app.kubernetes.io/managed-by":"kustomize","app.kubernetes.io/name":"api-file-zip-s3","app.kubernetes.io/part-of":"mcp-platform","app.kubernetes.io/version":"dev","component":"api-server","environment":"mmjc-dev","version":"v1"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["api-file-zip-s3"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"containers":[{"env":[{"name":"S3_ENDPOINT_URL","valueFrom":{"configMapKeyRef":{"key":"S3_ENDPOINT_URL","name":"api-file-zip-s3-config"}}},{"name":"S3_REGION","valueFrom":{"configMapKeyRef":{"key":"S3_REGION","name":"api-file-zip-s3-config"}}},{"name":"S3_ACCESS_KEY","valueFrom":{"secretKeyRef":{"key":"S3_ACCESS_KEY","name":"api-file-zip-s3-secrets"}}},{"name":"S3_SECRET_KEY","valueFrom":{"secretKeyRef":{"key":"S3_SECRET_KEY","name":"api-file-zip-s3-secrets"}}},{"name":"PORT","valueFrom":{"configMapKeyRef":{"key":"PORT","name":"api-file-zip-s3-config"}}},{"name":"LOG_LEVEL","valueFrom":{"configMapKeyRef":{"key":"LOG_LEVEL","name":"api-file-zip-s3-config"}}},{"name":"GOMAXPROCS","valueFrom":{"configMapKeyRef":{"key":"GOMAXPROCS","name":"api-file-zip-s3-config"}}},{"name":"GOMEMLIMIT","valueFrom":{"configMapKeyRef":{"key":"GOMEMLIMIT","name":"api-file-zip-s3-config"}}}],"image":"icr.io/mjc-cr/api-file-zip-s3:1.0.2","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/health","port":"http"},"initialDelaySeconds":30,"periodSeconds":30,"successThreshold":1,"timeoutSeconds":10},"name":"api-file-zip-s3","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/health","port":"http"},"initialDelaySeconds":10,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":5},"resources":{"limits":{"cpu":"500m","ephemeral-storage":"5Gi","memory":"512Mi"},"requests":{"cpu":"100m","ephemeral-storage":"500Mi","memory":"128Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":false,"runAsNonRoot":true,"runAsUser":1001},"startupProbe":{"failureThreshold":12,"httpGet":{"path":"/health","port":"http"},"initialDelaySeconds":5,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":5},"volumeMounts":[{"mountPath":"/tmp","name":"tmp-volume"},{"mountPath":"/var/cache/uploads","name":"upload-cache"}]}],"imagePullSecrets":[{"name":"all-icr-io-mmjc"}],"nodeSelector":{"kubernetes.io/os":"linux"},"securityContext":{"fsGroup":1001,"runAsGroup":1001,"runAsNonRoot":true,"runAsUser":1001},"serviceAccountName":"api-file-zip-s3","terminationGracePeriodSeconds":30,"topologySpreadConstraints":[{"labelSelector":{"matchLabels":{"app":"api-file-zip-s3","app.kubernetes.io/managed-by":"kustomize","app.kubernetes.io/name":"api-file-zip-s3","app.kubernetes.io/part-of":"mcp-platform","app.kubernetes.io/version":"dev","environment":"mmjc-dev"}},"maxSkew":1,"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}],"volumes":[{"emptyDir":{"sizeLimit":"5Gi"},"name":"tmp-volume"},{"emptyDir":{"sizeLimit":"2Gi"},"name":"upload-cache"}]}}}}
  creationTimestamp: "2025-10-29T05:32:38Z"
  generation: 1
  labels:
    app: api-file-zip-s3
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: api-file-zip-s3
    app.kubernetes.io/part-of: mcp-platform
    app.kubernetes.io/version: dev
    component: api-server
    environment: mmjc-dev
    version: v1
  name: api-file-zip-s3
  namespace: mmjc-dev
  resourceVersion: "54439678"
  uid: 1bb695d9-1754-4e66-8b5e-8ff4bee8605d
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: api-file-zip-s3
      app.kubernetes.io/managed-by: kustomize
      app.kubernetes.io/name: api-file-zip-s3
      app.kubernetes.io/part-of: mcp-platform
      app.kubernetes.io/version: dev
      environment: mmjc-dev
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/path: /health
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: api-file-zip-s3
        app.kubernetes.io/managed-by: kustomize
        app.kubernetes.io/name: api-file-zip-s3
        app.kubernetes.io/part-of: mcp-platform
        app.kubernetes.io/version: dev
        component: api-server
        environment: mmjc-dev
        version: v1
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - api-file-zip-s3
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - env:
        - name: S3_ENDPOINT_URL
          valueFrom:
            configMapKeyRef:
              key: S3_ENDPOINT_URL
              name: api-file-zip-s3-config
        - name: S3_REGION
          valueFrom:
            configMapKeyRef:
              key: S3_REGION
              name: api-file-zip-s3-config
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: S3_ACCESS_KEY
              name: api-file-zip-s3-secrets
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: S3_SECRET_KEY
              name: api-file-zip-s3-secrets
        - name: PORT
          valueFrom:
            configMapKeyRef:
              key: PORT
              name: api-file-zip-s3-config
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              key: LOG_LEVEL
              name: api-file-zip-s3-config
        - name: GOMAXPROCS
          valueFrom:
            configMapKeyRef:
              key: GOMAXPROCS
              name: api-file-zip-s3-config
        - name: GOMEMLIMIT
          valueFrom:
            configMapKeyRef:
              key: GOMEMLIMIT
              name: api-file-zip-s3-config
        image: icr.io/mjc-cr/api-file-zip-s3:1.0.2
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: api-file-zip-s3
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 500m
            ephemeral-storage: 5Gi
            memory: 512Mi
          requests:
            cpu: 100m
            ephemeral-storage: 500Mi
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1001
        startupProbe:
          failureThreshold: 12
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
        - mountPath: /var/cache/uploads
          name: upload-cache
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: all-icr-io-mmjc
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      serviceAccount: api-file-zip-s3
      serviceAccountName: api-file-zip-s3
      terminationGracePeriodSeconds: 30
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app: api-file-zip-s3
            app.kubernetes.io/managed-by: kustomize
            app.kubernetes.io/name: api-file-zip-s3
            app.kubernetes.io/part-of: mcp-platform
            app.kubernetes.io/version: dev
            environment: mmjc-dev
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - emptyDir:
          sizeLimit: 5Gi
        name: tmp-volume
      - emptyDir:
          sizeLimit: 2Gi
        name: upload-cache
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-10-29T05:32:59Z"
    lastUpdateTime: "2025-10-29T05:32:59Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-10-29T05:32:38Z"
    lastUpdateTime: "2025-10-29T05:32:59Z"
    message: ReplicaSet "api-file-zip-s3-74cd855775" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
