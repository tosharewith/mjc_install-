apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "1"
  creationTimestamp: "2025-07-09T11:33:39Z"
  generation: 1
  labels:
    chart: airflow-1.17.0
    component: run-airflow-migrations
    heritage: Helm
    release: airflow-mmjc-dev
    tier: airflow
  name: airflow-mmjc-dev-run-airflow-migrations
  namespace: mmjc-dev
  resourceVersion: "16505856"
  uid: f61bf76c-4e09-4504-95a7-2843f789d00c
spec:
  backoffLimit: 6
  completionMode: NonIndexed
  completions: 1
  manualSelector: false
  parallelism: 1
  podReplacementPolicy: TerminatingOrFailed
  selector:
    matchLabels:
      batch.kubernetes.io/controller-uid: f61bf76c-4e09-4504-95a7-2843f789d00c
  suspend: false
  template:
    metadata:
      creationTimestamp: null
      labels:
        batch.kubernetes.io/controller-uid: f61bf76c-4e09-4504-95a7-2843f789d00c
        batch.kubernetes.io/job-name: airflow-mmjc-dev-run-airflow-migrations
        component: run-airflow-migrations
        controller-uid: f61bf76c-4e09-4504-95a7-2843f789d00c
        job-name: airflow-mmjc-dev-run-airflow-migrations
        release: airflow-mmjc-dev
        tier: airflow
    spec:
      affinity: {}
      containers:
      - args:
        - bash
        - -c
        - |-
          exec \
          airflow db migrate
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: AIRFLOW__CORE__FERNET_KEY
          valueFrom:
            secretKeyRef:
              key: fernet-key
              name: airflow-mmjc-dev-fernet-key
        - name: AIRFLOW_HOME
          value: /opt/airflow
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          valueFrom:
            secretKeyRef:
              key: connection
              name: airflow-postgres-connection-dev
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          valueFrom:
            secretKeyRef:
              key: connection
              name: airflow-postgres-connection-dev
        - name: AIRFLOW_CONN_AIRFLOW_DB
          valueFrom:
            secretKeyRef:
              key: connection
              name: airflow-postgres-connection-dev
        - name: AIRFLOW__WEBSERVER__SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: webserver-secret-key
              name: airflow-mmjc-dev-webserver-secret-key
        - name: AIRFLOW__API_AUTH__JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: jwt-secret
              name: airflow-mmjc-dev-jwt-secret
        - name: AIRFLOW__CELERY__BROKER_URL
          valueFrom:
            secretKeyRef:
              key: connection
              name: airflow-redis-connection-dev
        image: apache/airflow:3.0.2
        imagePullPolicy: IfNotPresent
        name: run-airflow-migrations
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/airflow/airflow.cfg
          name: config
          readOnly: true
          subPath: airflow.cfg
        - mountPath: /opt/airflow/config/airflow_local_settings.py
          name: config
          readOnly: true
          subPath: airflow_local_settings.py
        - mountPath: /home/airflow/.postgresql
          name: postgres-ca
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 0
        runAsUser: 50000
      serviceAccount: airflow-mmjc-dev-migrate-database-job
      serviceAccountName: airflow-mmjc-dev-migrate-database-job
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: airflow-mmjc-dev-config
        name: config
      - name: postgres-ca
        secret:
          defaultMode: 420
          secretName: airflow-postgres-cert-dev
  ttlSecondsAfterFinished: 300
status:
  failed: 1
  ready: 0
  startTime: "2025-07-09T11:33:39Z"
  terminating: 0
  uncountedTerminatedPods: {}
