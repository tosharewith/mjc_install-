apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "28"
    meta.helm.sh/release-name: airflow-test
    meta.helm.sh/release-namespace: airflow-test
  creationTimestamp: "2025-07-14T10:31:39Z"
  generation: 32
  labels:
    app.kubernetes.io/managed-by: Helm
    chart: airflow-1.17.0
    component: scheduler
    executor: CeleryExecutor
    heritage: Helm
    release: airflow-test
    tier: airflow
  name: airflow-test-scheduler
  namespace: airflow-test
  resourceVersion: "54285763"
  uid: 75698acb-c3c3-479f-8472-05198fa415d8
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      component: scheduler
      release: airflow-test
      tier: airflow
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/airflow-config: 721608fe60cf37e5eb57ba9d22e2c498f750b2d744a120e4890371707106ccdf
        checksum/extra-configmaps: e862ea47e13e634cf17d476323784fa27dac20015550c230953b526182f5cac8
        checksum/extra-secrets: e9582fdd622296c976cbc10a5ba7d6702c28a24fe80795ea5b84ba443a56c827
        checksum/metadata-secret: b2fe937560e9635aeb01fce9100c2f836c5880f81c802565ce95fbcc8a56da4c
        checksum/pgbouncer-config-secret: 1dae2adc757473469686d37449d076b0c82404f61413b58ae68b3c5e99527688
        checksum/result-backend-secret: 98a68f230007cfa8f5d3792e1aff843a76b0686409e4a46ab2f092f6865a1b71
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        kubectl.kubernetes.io/restartedAt: "2025-08-14T15:32:15+03:00"
      creationTimestamp: null
      labels:
        component: scheduler
        release: airflow-test
        tier: airflow
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  component: scheduler
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - bash
        - -c
        - exec airflow scheduler
        env:
        - name: AIRFLOW__CORE__FERNET_KEY
          valueFrom:
            secretKeyRef:
              key: fernet-key
              name: airflow-test-fernet-key
        - name: AIRFLOW_HOME
          value: /opt/airflow
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          valueFrom:
            secretKeyRef:
              key: connection
              name: airflow-postgres-connection-test
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          valueFrom:
            secretKeyRef:
              key: connection
              name: airflow-postgres-connection-test
        - name: AIRFLOW_CONN_AIRFLOW_DB
          valueFrom:
            secretKeyRef:
              key: connection
              name: airflow-postgres-connection-test
        - name: AIRFLOW__WEBSERVER__SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: webserver-secret-key
              name: airflow-test-webserver-secret-key
        - name: AIRFLOW__API_AUTH__JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: jwt-secret
              name: airflow-test-jwt-secret
        - name: AIRFLOW__CELERY__BROKER_URL
          valueFrom:
            secretKeyRef:
              key: connection
              name: airflow-redis-connection-test
        image: icr.io/mjc-cr/mmjc-airflow-service:latest
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - |
              CONNECTION_CHECK_MAX_COUNT=0 AIRFLOW__LOGGING__LOGGING_LEVEL=ERROR exec /entrypoint \
              airflow jobs check --job-type SchedulerJob --local
          failureThreshold: 5
          initialDelaySeconds: 10
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 20
        name: scheduler
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        startupProbe:
          exec:
            command:
            - sh
            - -c
            - |
              CONNECTION_CHECK_MAX_COUNT=0 AIRFLOW__LOGGING__LOGGING_LEVEL=ERROR exec /entrypoint \
              airflow jobs check --job-type SchedulerJob --local
          failureThreshold: 6
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 20
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/airflow/pod_templates/pod_template_file.yaml
          name: config
          readOnly: true
          subPath: pod_template_file.yaml
        - mountPath: /opt/airflow/logs
          name: logs
        - mountPath: /opt/airflow/airflow.cfg
          name: config
          readOnly: true
          subPath: airflow.cfg
        - mountPath: /opt/airflow/config/airflow_local_settings.py
          name: config
          readOnly: true
          subPath: airflow_local_settings.py
        - mountPath: /home/airflow/.postgresql
          name: postgres-ca
          readOnly: true
      - args:
        - bash
        - /clean-logs
        env:
        - name: AIRFLOW__LOG_RETENTION_DAYS
          value: "15"
        - name: AIRFLOW__LOG_CLEANUP_FREQUENCY_MINUTES
          value: "15"
        - name: AIRFLOW_HOME
          value: /opt/airflow
        image: icr.io/mjc-cr/mmjc-airflow-service:latest
        imagePullPolicy: Always
        name: scheduler-log-groomer
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/airflow/logs
          name: logs
        - mountPath: /home/airflow/.postgresql
          name: postgres-ca
          readOnly: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: all-icr-io-mmjc
      initContainers:
      - args:
        - airflow
        - db
        - check-migrations
        - --migration-wait-timeout=60
        env:
        - name: AIRFLOW__CORE__FERNET_KEY
          valueFrom:
            secretKeyRef:
              key: fernet-key
              name: airflow-test-fernet-key
        - name: AIRFLOW_HOME
          value: /opt/airflow
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          valueFrom:
            secretKeyRef:
              key: connection
              name: airflow-postgres-connection-test
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          valueFrom:
            secretKeyRef:
              key: connection
              name: airflow-postgres-connection-test
        - name: AIRFLOW_CONN_AIRFLOW_DB
          valueFrom:
            secretKeyRef:
              key: connection
              name: airflow-postgres-connection-test
        - name: AIRFLOW__WEBSERVER__SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: webserver-secret-key
              name: airflow-test-webserver-secret-key
        - name: AIRFLOW__API_AUTH__JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: jwt-secret
              name: airflow-test-jwt-secret
        - name: AIRFLOW__CELERY__BROKER_URL
          valueFrom:
            secretKeyRef:
              key: connection
              name: airflow-redis-connection-test
        image: icr.io/mjc-cr/mmjc-airflow-service:latest
        imagePullPolicy: Always
        name: wait-for-airflow-migrations
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/airflow/airflow.cfg
          name: config
          readOnly: true
          subPath: airflow.cfg
        - mountPath: /opt/airflow/config/airflow_local_settings.py
          name: config
          readOnly: true
          subPath: airflow_local_settings.py
        - mountPath: /home/airflow/.postgresql
          name: postgres-ca
          readOnly: true
      nodeSelector:
        ibm-cloud.kubernetes.io/worker-pool-name: airflow-pool
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 0
        runAsUser: 50000
      serviceAccount: airflow-test-scheduler
      serviceAccountName: airflow-test-scheduler
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          defaultMode: 420
          name: airflow-test-config
        name: config
      - name: postgres-ca
        secret:
          defaultMode: 420
          secretName: airflow-postgres-cert-test
      - emptyDir: {}
        name: logs
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-07-14T10:31:39Z"
    lastUpdateTime: "2025-08-14T12:33:05Z"
    message: ReplicaSet "airflow-test-scheduler-76979557cc" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2025-10-28T18:43:26Z"
    lastUpdateTime: "2025-10-28T18:43:26Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 32
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
