apiVersion: v1
data:
  erDiagram.txt: |
    MERMAID ER DIAGRAM SYNTAX RULES:

    DECLARATION:
    - Start with: erDiagram

    ENTITY SYNTAX:
    - Format: ENTITY_NAME { datatype column_name constraints }
    - Entity names: ALL_CAPS with underscores only
    - Column names: lowercase_with_underscores
    - Data types: string, int, boolean, date, decimal, etc.

    DATA TYPE RESTRICTIONS:
    - CANNOT use parentheses in data types: DECIMAL(10,2) is INVALID
    - CANNOT use commas in any context within entity blocks
    - USE simple types only: decimal, int, string, date, boolean
    - WHY: Mermaid parser treats commas as separators, parentheses as syntax errors

    CORRECT DATA TYPE EXAMPLES:
    ✅ decimal SUM_ASSURED
    ✅ int customer_id PK
    ✅ string email_address UK
    ❌ DECIMAL(10,2) SUM_ASSURED (contains comma and parentheses)
    ❌ VARCHAR(255) name (contains parentheses)
    ❌ FLOAT(8,2) rate (contains comma and parentheses)

    RELATIONSHIPS:
    - ||--|| = One to one
    - ||--o{ = One to many
    - o{--o{ = Many to many
    - ||--o| = One to zero or one
    - }o--|| = Zero or more to one
    - Format: ENTITY1 ||--o{ ENTITY2 : "relationship_label"

    CONSTRAINTS:
    - PK = Primary Key
    - FK = Foreign Key
    - UK = Unique Key
    - Place after column name: column_name datatype PK

    COMMON ISSUES:
    - Invalid entity names with hyphens or spaces
    - Missing quotes around relationship labels
    - Invalid data type syntax with commas/parentheses: DECIMAL(10,2) should be decimal
    - Malformed relationship syntax

    FIX REQUIREMENTS:
    1. Use valid entity and column naming (underscores only)
    2. Quote all relationship labels
    3. Use simple data types without parentheses or commas
    4. Use proper cardinality notation
    5. Follow entity block syntax exactly
  general.txt: |
    GENERAL MERMAID SYNTAX RULES:

    NODE IDENTIFIERS:
    - Must start with a letter (A-Z, a-z)
    - Can contain letters, numbers, and underscores only
    - Cannot contain spaces, hyphens, periods, or special characters
    - Are case-sensitive (A and a are different)
    - Examples: A, Node1, Process_2, START

    TEXT CONTENT:
    - Always use quotes for text with spaces or special characters
    - Use ["text"] format for complex strings
    - Escape quotes inside text with backslash
    - Use <br/> for line breaks, never literal breaks
    - Support HTML entities: &lt;, &gt;, &amp;

    CONNECTIONS:
    - Use standard arrow syntax for connections
    - Label decision branches clearly
    - Ensure all nodes are properly connected
    - No orphaned or unreachable nodes

    COMMON FIXES:
    - Replace invalid characters in node IDs with underscores
    - Quote all text containing spaces or special characters
    - Replace \n or literal line breaks with <br/> tags
    - Fix malformed arrow and connection syntax
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"erDiagram.txt":"MERMAID ER DIAGRAM SYNTAX RULES:\n\nDECLARATION:\n- Start with: erDiagram\n\nENTITY SYNTAX:\n- Format: ENTITY_NAME { datatype column_name constraints }\n- Entity names: ALL_CAPS with underscores only\n- Column names: lowercase_with_underscores\n- Data types: string, int, boolean, date, decimal, etc.\n\nDATA TYPE RESTRICTIONS:\n- CANNOT use parentheses in data types: DECIMAL(10,2) is INVALID\n- CANNOT use commas in any context within entity blocks\n- USE simple types only: decimal, int, string, date, boolean\n- WHY: Mermaid parser treats commas as separators, parentheses as syntax errors\n\nCORRECT DATA TYPE EXAMPLES:\n✅ decimal SUM_ASSURED\n✅ int customer_id PK\n✅ string email_address UK\n❌ DECIMAL(10,2) SUM_ASSURED (contains comma and parentheses)\n❌ VARCHAR(255) name (contains parentheses)\n❌ FLOAT(8,2) rate (contains comma and parentheses)\n\nRELATIONSHIPS:\n- ||--|| = One to one\n- ||--o{ = One to many\n- o{--o{ = Many to many\n- ||--o| = One to zero or one\n- }o--|| = Zero or more to one\n- Format: ENTITY1 ||--o{ ENTITY2 : \"relationship_label\"\n\nCONSTRAINTS:\n- PK = Primary Key\n- FK = Foreign Key\n- UK = Unique Key\n- Place after column name: column_name datatype PK\n\nCOMMON ISSUES:\n- Invalid entity names with hyphens or spaces\n- Missing quotes around relationship labels\n- Invalid data type syntax with commas/parentheses: DECIMAL(10,2) should be decimal\n- Malformed relationship syntax\n\nFIX REQUIREMENTS:\n1. Use valid entity and column naming (underscores only)\n2. Quote all relationship labels\n3. Use simple data types without parentheses or commas\n4. Use proper cardinality notation\n5. Follow entity block syntax exactly\n","general.txt":"GENERAL MERMAID SYNTAX RULES:\n\nNODE IDENTIFIERS:\n- Must start with a letter (A-Z, a-z)\n- Can contain letters, numbers, and underscores only\n- Cannot contain spaces, hyphens, periods, or special characters\n- Are case-sensitive (A and a are different)\n- Examples: A, Node1, Process_2, START\n\nTEXT CONTENT:\n- Always use quotes for text with spaces or special characters\n- Use [\"text\"] format for complex strings\n- Escape quotes inside text with backslash\n- Use \u003cbr/\u003e for line breaks, never literal breaks\n- Support HTML entities: \u0026lt;, \u0026gt;, \u0026amp;\n\nCONNECTIONS:\n- Use standard arrow syntax for connections\n- Label decision branches clearly\n- Ensure all nodes are properly connected\n- No orphaned or unreachable nodes\n\nCOMMON FIXES:\n- Replace invalid characters in node IDs with underscores\n- Quote all text containing spaces or special characters\n- Replace \\n or literal line breaks with \u003cbr/\u003e tags\n- Fix malformed arrow and connection syntax\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app":"mermaid-validator-api","component":"syntax-rules"},"name":"mermaid-syntax-rules","namespace":"mmjc-test"}}
  creationTimestamp: "2025-09-24T21:26:16Z"
  labels:
    app: mermaid-validator-api
    component: syntax-rules
  name: mermaid-syntax-rules
  namespace: mmjc-test
  resourceVersion: "42016790"
  uid: fdf89cc6-ba69-468f-b535-b6f8f19ca27c
