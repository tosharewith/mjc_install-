apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: milvus-mmjc-test
    meta.helm.sh/release-namespace: mmjc-test
  creationTimestamp: "2025-07-31T08:33:14Z"
  generation: 1
  labels:
    app.kubernetes.io/component: kafka
    app.kubernetes.io/instance: milvus-mmjc-test
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kafka
    helm.sh/chart: kafka-15.5.1
  name: milvus-mmjc-test-kafka
  namespace: mmjc-test
  resourceVersion: "22655595"
  uid: b61b5a6b-bdf0-481d-a8a9-8851412b4e90
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: Parallel
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: kafka
      app.kubernetes.io/instance: milvus-mmjc-test
      app.kubernetes.io/name: kafka
  serviceName: milvus-mmjc-test-kafka-headless
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: kafka
        app.kubernetes.io/instance: milvus-mmjc-test
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kafka
        helm.sh/chart: kafka-15.5.1
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: kafka
                  app.kubernetes.io/instance: milvus-mmjc-test
                  app.kubernetes.io/name: kafka
              namespaces:
              - mmjc-test
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - command:
        - /scripts/setup.sh
        env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: milvus-mmjc-test-zookeeper
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: INTERNAL
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: INTERNAL:PLAINTEXT,CLIENT:PLAINTEXT
        - name: KAFKA_CFG_LISTENERS
          value: INTERNAL://:9093,CLIENT://:9092
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: INTERNAL://$(MY_POD_NAME).milvus-mmjc-test-kafka-headless.mmjc-test.svc.cluster.local:9093,CLIENT://$(MY_POD_NAME).milvus-mmjc-test-kafka-headless.mmjc-test.svc.cluster.local:9092
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        - name: KAFKA_VOLUME_DIR
          value: /bitnami/kafka
        - name: KAFKA_LOG_DIR
          value: /opt/bitnami/kafka/logs
        - name: KAFKA_CFG_DELETE_TOPIC_ENABLE
          value: "false"
        - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_HEAP_OPTS
          value: -Xmx4096m -Xms4096m
        - name: KAFKA_CFG_LOG_FLUSH_INTERVAL_MESSAGES
          value: "10000"
        - name: KAFKA_CFG_LOG_FLUSH_INTERVAL_MS
          value: "1000"
        - name: KAFKA_CFG_LOG_RETENTION_BYTES
          value: "-1"
        - name: KAFKA_CFG_LOG_RETENTION_CHECK_INTERVALS_MS
          value: "300000"
        - name: KAFKA_CFG_LOG_RETENTION_HOURS
          value: "168"
        - name: KAFKA_CFG_MESSAGE_MAX_BYTES
          value: "10485760"
        - name: KAFKA_CFG_LOG_SEGMENT_BYTES
          value: "1073741824"
        - name: KAFKA_CFG_LOG_DIRS
          value: /bitnami/kafka/data
        - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
          value: "3"
        - name: KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "3"
        - name: KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_CFG_NUM_IO_THREADS
          value: "8"
        - name: KAFKA_CFG_NUM_NETWORK_THREADS
          value: "3"
        - name: KAFKA_CFG_NUM_PARTITIONS
          value: "1"
        - name: KAFKA_CFG_NUM_RECOVERY_THREADS_PER_DATA_DIR
          value: "1"
        - name: KAFKA_CFG_SOCKET_RECEIVE_BUFFER_BYTES
          value: "102400"
        - name: KAFKA_CFG_SOCKET_REQUEST_MAX_BYTES
          value: "104857600"
        - name: KAFKA_CFG_SOCKET_SEND_BUFFER_BYTES
          value: "102400"
        - name: KAFKA_CFG_ZOOKEEPER_CONNECTION_TIMEOUT_MS
          value: "6000"
        - name: KAFKA_CFG_AUTHORIZER_CLASS_NAME
        - name: KAFKA_CFG_ALLOW_EVERYONE_IF_NO_ACL_FOUND
          value: "true"
        - name: KAFKA_CFG_SUPER_USERS
          value: User:admin
        - name: KAFKA_CFG_MAX_PARTITION_FETCH_BYTES
          value: "5242880"
        - name: KAFKA_CFG_MAX_REQUEST_SIZE
          value: "5242880"
        - name: KAFKA_CFG_REPLICA_FETCH_MAX_BYTES
          value: "10485760"
        - name: KAFKA_CFG_FETCH_MESSAGE_MAX_BYTES
          value: "5242880"
        - name: KAFKA_CFG_LOG_ROLL_HOURS
          value: "24"
        image: docker.io/bitnami/kafka:3.1.0-debian-10-r52
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: kafka-client
          timeoutSeconds: 5
        name: kafka
        ports:
        - containerPort: 9092
          name: kafka-client
          protocol: TCP
        - containerPort: 9093
          name: kafka-internal
          protocol: TCP
        readinessProbe:
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: kafka-client
          timeoutSeconds: 5
        resources: {}
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        startupProbe:
          failureThreshold: 15
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: kafka-client
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /bitnami/kafka
          name: data
        - mountPath: /opt/bitnami/kafka/logs
          name: logs
        - mountPath: /scripts/setup.sh
          name: scripts
          subPath: setup.sh
      dnsPolicy: ClusterFirst
      nodeSelector:
        ibm-cloud.kubernetes.io/worker-pool-name: milvus-pool
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
      serviceAccount: milvus-mmjc-test-kafka
      serviceAccountName: milvus-mmjc-test-kafka
      terminationGracePeriodSeconds: 90
      tolerations:
      - effect: NoSchedule
        key: reserved
        operator: Equal
        value: milvus
      volumes:
      - configMap:
          defaultMode: 493
          name: milvus-mmjc-test-kafka-scripts
        name: scripts
      - emptyDir: {}
        name: logs
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
      volumeMode: Filesystem
    status:
      phase: Pending
status:
  availableReplicas: 3
  collisionCount: 0
  currentReplicas: 3
  currentRevision: milvus-mmjc-test-kafka-79689dcbc7
  observedGeneration: 1
  readyReplicas: 3
  replicas: 3
  updateRevision: milvus-mmjc-test-kafka-79689dcbc7
  updatedReplicas: 3
