# Airflow Helm Chart Values para Ambiente Air-gapped com Artifactory
# Based on airflow-values-aws-eks.yaml but with Artifactory registry

# ============================================================================
# VERSÃO DO AIRFLOW
# ============================================================================
airflowVersion: "3.0.2"

# ============================================================================
# EXECUTOR
# ============================================================================
executor: "CeleryExecutor"

# ============================================================================
# IMAGEM CUSTOMIZADA (via Artifactory)
# ============================================================================
defaultAirflowRepository: docker-arc3-remote.artifactory.prod.aws.cloud.ihf/mmjc-airflow-service
defaultAirflowTag: latest
defaultAirflowDigest: null

images:
  airflow:
    pullPolicy: IfNotPresent  # Importante para air-gapped

  # StatsD exporter
  statsd:
    repository: docker-arc3-remote.artifactory.prod.aws.cloud.ihf/prometheus/statsd-exporter
    tag: v0.28.0
    pullPolicy: IfNotPresent

# ============================================================================
# REGISTRY SECRET (Artifactory)
# ============================================================================
registry:
  secretName: artifactory-registry-secret

# Criar secret com:
# kubectl create secret docker-registry artifactory-registry-secret \
#   --docker-server=docker-arc3-remote.artifactory.prod.aws.cloud.ihf \
#   --docker-username=YOUR_USER \
#   --docker-password=YOUR_PASSWORD \
#   -n airflow-dev

# ============================================================================
# BANCO DE DADOS EXTERNO (RDS PostgreSQL)
# ============================================================================
postgresql:
  enabled: false

data:
  metadataSecretName: airflow-postgres-connection-dev
  brokerUrlSecretName: airflow-redis-connection-dev

# ============================================================================
# REDIS EXTERNO (ElastiCache)
# ============================================================================
redis:
  enabled: false

# ============================================================================
# DAGs PERSISTENCE
# ============================================================================
dags:
  persistence:
    enabled: true
    existingClaim: mmjc-airflow-dags-dev
    # Ou criar novo PVC:
    # size: 10Gi
    # storageClassName: gp3

  # Não use gitSync em ambiente air-gapped
  # gitSync:
  #   enabled: false

# ============================================================================
# CONFIGURAÇÕES DO AIRFLOW
# ============================================================================
config:
  celery:
    worker_concurrency: 4

  logging:
    remote_logging: "True"
    remote_base_log_folder: "s3://SEU-BUCKET-LOGS/airflow/logs"
    remote_log_conn_id: "aws_default"

  core:
    dags_folder: "/opt/airflow/dags"
    load_examples: "False"

  webserver:
    base_url: "https://airflow.seu-dominio.com"
    expose_config: "True"

# ============================================================================
# VARIÁVEIS DE AMBIENTE GLOBAIS
# ============================================================================
env:
  - name: AIRFLOW__CORE__FERNET_KEY
    valueFrom:
      secretKeyRef:
        name: airflow-fernet-key
        key: fernet-key
  - name: AWS_DEFAULT_REGION
    value: "us-east-1"

# ============================================================================
# COMPONENTES - SCHEDULER
# ============================================================================
scheduler:
  replicas: 1

  resources:
    requests:
      cpu: "500m"
      memory: "2Gi"
    limits:
      cpu: "2000m"
      memory: "4Gi"

  # Certificado PostgreSQL (se necessário)
  extraVolumes:
    - name: postgres-ca
      secret:
        secretName: airflow-postgres-cert-dev
        optional: true

  extraVolumeMounts:
    - name: postgres-ca
      mountPath: /home/airflow/.postgresql
      readOnly: true

# ============================================================================
# COMPONENTES - API SERVER (Webserver)
# ============================================================================
apiServer:
  replicas: 2

  resources:
    requests:
      cpu: "500m"
      memory: "2Gi"
    limits:
      cpu: "2000m"
      memory: "4Gi"

  extraVolumes:
    - name: postgres-ca
      secret:
        secretName: airflow-postgres-cert-dev
        optional: true

  extraVolumeMounts:
    - name: postgres-ca
      mountPath: /home/airflow/.postgresql
      readOnly: true

# ============================================================================
# COMPONENTES - WORKERS
# ============================================================================
workers:
  replicas: 2

  resources:
    requests:
      cpu: "1000m"
      memory: "4Gi"
    limits:
      cpu: "4000m"
      memory: "8Gi"

  persistence:
    enabled: true
    size: 20Gi
    storageClassName: gp3

  extraVolumes:
    - name: postgres-ca
      secret:
        secretName: airflow-postgres-cert-dev
        optional: true

  extraVolumeMounts:
    - name: postgres-ca
      mountPath: /home/airflow/.postgresql
      readOnly: true

# ============================================================================
# COMPONENTES - TRIGGERER
# ============================================================================
triggerer:
  replicas: 1

  resources:
    requests:
      cpu: "500m"
      memory: "1Gi"
    limits:
      cpu: "1000m"
      memory: "2Gi"

  extraVolumes:
    - name: postgres-ca
      secret:
        secretName: airflow-postgres-cert-dev
        optional: true

  extraVolumeMounts:
    - name: postgres-ca
      mountPath: /home/airflow/.postgresql
      readOnly: true

# ============================================================================
# COMPONENTES - DAG PROCESSOR
# ============================================================================
dagProcessor:
  enabled: true
  replicas: 1

  resources:
    requests:
      cpu: "500m"
      memory: "1Gi"
    limits:
      cpu: "1000m"
      memory: "2Gi"

  extraVolumes:
    - name: postgres-ca
      secret:
        secretName: airflow-postgres-cert-dev
        optional: true

  extraVolumeMounts:
    - name: postgres-ca
      mountPath: /home/airflow/.postgresql
      readOnly: true

# ============================================================================
# COMPONENTES - STATSD
# ============================================================================
statsd:
  enabled: true

  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "200m"
      memory: "256Mi"

# ============================================================================
# JOBS - DATABASE MIGRATION
# ============================================================================
migrateDatabaseJob:
  enabled: true

  extraVolumes:
    - name: postgres-ca
      secret:
        secretName: airflow-postgres-cert-dev
        optional: true

  extraVolumeMounts:
    - name: postgres-ca
      mountPath: /home/airflow/.postgresql
      readOnly: true

# ============================================================================
# JOBS - CREATE USER
# ============================================================================
createUserJob:
  enabled: true

  extraVolumes:
    - name: postgres-ca
      secret:
        secretName: airflow-postgres-cert-dev
        optional: true

  extraVolumeMounts:
    - name: postgres-ca
      mountPath: /home/airflow/.postgresql
      readOnly: true

# ============================================================================
# INGRESS (ALB no EKS)
# ============================================================================
ingress:
  enabled: true
  apiVersion: networking.k8s.io/v1
  ingressClassName: alb

  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:ACCOUNT_ID:certificate/CERT_ID
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'

  hosts:
    - name: airflow.seu-dominio.com
      tls:
        enabled: true

  path: /
  pathType: Prefix

# ============================================================================
# SERVICE ACCOUNT (IRSA)
# ============================================================================
serviceAccount:
  create: true
  name: airflow-dev
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/airflow-dev-role

# ============================================================================
# NOTAS SOBRE AMBIENTE AIR-GAPPED
# ============================================================================
# 1. Todas as imagens devem estar no Artifactory antes da instalação
# 2. Use pullPolicy: IfNotPresent para evitar pulls desnecessários
# 3. Git-sync não funcionará - use DAGs em PVC ou ConfigMaps
# 4. Helm chart deve ser instalado de arquivo local (.tgz)
# 5. Registry secret é obrigatório
